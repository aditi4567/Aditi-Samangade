A]Package Management

	Ubuntu features a comprehensive package management system for installing, upgrading, configuring, and removing software. 
In addition to providing access to an organized base of over 60,000 software packages for your Ubuntu computer, the package management facilities
also feature dependency resolution capabilities and software update checking.
	Several tools are available for interacting with Ubuntu’s package management system, from simple command-line utilities which may be easily automated 
by system administrators, to a graphical interface which is easy to use by those new to Ubuntu.


B]Introduction

	Ubuntu’s package management system is derived from the same system used by the Debian GNU/Linux distribution. The package files contain all of the necessary files, 
meta-data, and instructions to implement a particular functionality or software application on your Ubuntu computer.
	Debian package files typically have the extension .deb, and usually exist in repositories which are collections of packages found online or on physical media, such as CD-ROM discs. 
Packages are normally in a pre-compiled binary format; thus installation is quick and requires no compiling of software.
	Many packages use dependencies. Dependencies are additional packages required by the principal package in order to function properly. For example, the speech synthesis package festival 
depends upon the package alsa-utils, which is a package supplying the ALSA sound library tools needed for audio playback. In order for festival to function, it and all of its dependencies must be installed. 
The software management tools in Ubuntu will do this automatically.


C]Apt
	The apt command is a powerful command-line tool, which works with Ubuntu’s Advanced Packaging Tool (APT) performing such functions as installation of new software packages, 
upgrade of existing software packages, updating of the package list index, and even upgrading the entire Ubuntu system.

Some examples of popular uses for the apt utility:

1.Install a Package: 
Installation of packages using the apt tool is quite simple. For example, to install the nmap network scanner, type the following:
sudo apt install nmap

2.Remove a Package: 
Removal of a package (or packages) is also straightforward. To remove the package installed in the previous example, type the following:
sudo apt remove nmap

3.Update the Package Index: The APT package index is essentially a database of available packages from the repositories defined in the /etc/apt/sources.list file and in the /etc/apt/sources.list.d directory. 
To update the local package index with the latest changes made in the repositories, type the following:
sudo apt update

4.Upgrade Packages: Over time, updated versions of packages currently installed on your computer may become available from the package repositories. 
To upgrade your system, first, update your package index as outlined above, and then type:
sudo apt upgrade

Actions of the apt command, such as installation and removal of packages, are logged in the /var/log/dpkg.log log file.



D]Aptitude
	Launching Aptitude with no command-line options will give you a menu-driven, text-based front-end to the Advanced Packaging Tool (APT) system. 
Many of the common package management functions, such as installation, removal, and upgrade, can be performed in Aptitude with single-key commands, which are typically lowercase letters.
	Aptitude is best suited for use in a non-graphical terminal environment to ensure proper functioning of the command keys. 
You may start the menu-driven interface of Aptitude as a normal user by typing the following command at a terminal prompt:
sudo aptitude

	When Aptitude starts, you will see a menu bar at the top of the screen and two panes below the menu bar. The top pane contains package categories, such as New Packages and Not Installed Packages. 
The bottom pane contains information related to the packages and package categories.
Using Aptitude for package management is relatively straightforward, and the user interface makes common tasks simple to perform. The following are examples of common package management functions as performed in Aptitude:
1.Install Packages
2.Remove Packages
3.Update Package Index
4.Upgrade Packages

The first column of the information displayed in the package list in the top pane, when actually viewing packages lists the current state of the package, and uses the following key to describe the state of the package:
i: Installed package

c: Package not installed, but package configuration remains on the system

p: Purged from system

v: Virtual package

B: Broken package

u: Unpacked files, but package not yet configured

C: Half-configured - Configuration failed and requires fix

H: Half-installed - Removal failed and requires a fix

To exit Aptitude, simply press the q key and confirm you wish to exit. Many other functions are available from the Aptitude menu by pressing the F10 key.

E]dpkg

dpkg is a package manager for Debian-based systems. It can install, remove, and build packages, but unlike other package management systems, it cannot automatically download and install packages or their dependencies. 
Apt and Aptitude are newer, and layer additional features on top of dpkg. This section covers using dpkg to manage locally installed packages:

1.To list all packages in the system’s package database, including all packages, installed and uninstalled, from a terminal prompt type:
dpkg -l

2.Depending on the number of packages on your system, this can generate a large amount of output. Pipe the output through grep to see if a specific package is installed:
dpkg -l | grep apache2

3.To list the files installed by a package, in this case the ufw package, enter:
dpkg -L ufw

4.If you are not sure which package installed a file, dpkg -S may be able to tell you. For example:
dpkg -S /etc/host.conf 
base-files: /etc/host.conf

5.You can install a local .deb file by entering:
sudo dpkg -i zip_3.0-4_amd64.deb

6.Uninstalling a package can be accomplished by:
sudo dpkg -r zip

